{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This is a AWS CloudFormation template for Transit VPC to TGW migration. This template uses Lambda to migrate a exisiting Transit VPC environment to Transit Gateway. It checks for exisiting VGWs created by Transit VPC and associates VPCs for those VGWs with a TGW. For cross account VGWs created by Transit VPC stack , this  Lambda shares the TGW with those accounts",

  "Parameters": {
    "TransitVPCARN" : {
      "Description" : "ARN of the existing transit VPC stack",
      "Type" : "String"
    },
    "TGWName" : {
      "Description" : "Name of the transit gateway that will be created",
      "Type" : "String",
      "Default" : "TGW"
    },
    "BgpAsn" : {
      "Description" : "AWS side BGP ASN to use for Transit Gateway.",
      "Type" : "Number",
      "Default" : "64512",
      "MinValue": "1",
      "MaxValue": "65535",
      "ConstraintDescription": "AWS side BGP ASN to use for Transit GATEWAY. "
    },
    "DNSSupport" : {
      "Description" : "Enable Domain Name System resolution for VPCs attached to this Transit Gateway.",
      "Type" : "String",
      "Default" : "enable",
      "AllowedValues" : ["enable", "disable"]
    },
    "VPNECMPsupport" : {
      "Description" : "Equal-cost multi-path routing for VPN Connections that are attached to this Transit Gateway.",
      "Type" : "String",
      "Default" : "enable",
      "AllowedValues" : ["enable", "disable"]
    },
    "DefaultAssociation" : {
      "Description" : "Automatically associate Transit Gateway attachments with this Transit Gateway's default route table.",
      "Type" : "String",
      "Default" : "enable",
      "AllowedValues" : ["enable", "disable"]
    },
    "DefaultPropagation" : {
      "Description" : "Automatically propagate Transit Gateway attachments with this Transit Gateway's default route table.",
      "Type" : "String",
      "Default" : "enable",
      "AllowedValues" : ["enable", "disable"]
    },
    "AutoAcceptAttachments" : {
      "Description" : "Automatically accept cross account attachments that are attached to this Transit Gateway.",
      "Type" : "String",
      "Default" : "enable",
      "AllowedValues" : ["enable", "disable"]
    }
  },

  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
     "ParameterGroups" : [
       {
         "Label" : { "default":"Transit VPC Stack ARN" },
         "Parameters" : [ "TransitVPCARN" ]
       },
      {
        "Label" : { "default":"TGW Configuration" },
        "Parameters" : [ "TGWName", "BgpAsn", "DnsSupport","VPNECMPsupport", "DefaultAssociation","DefaultPropagation" ,"AutoAcceptAttachments" ]
      }
     ]
    }
  },
  "Resources" : {
    "CreateTGW": {
      "Type" : "AWS::EC2::TransitGateway",
      "Properties" : {
        "AmazonSideAsn" : { "Ref": "BgpAsn" },
        "AutoAcceptSharedAttachments" : { "Ref": "AutoAcceptAttachments" },
        "DefaultRouteTableAssociation" : { "Ref": "DefaultAssociation" },
        "DefaultRouteTablePropagation" : { "Ref": "DefaultPropagation" },
        "DnsSupport" : { "Ref": "DNSSupport" },
        "VpnEcmpSupport" : { "Ref": "VPNECMPsupport" }
      }
    },
    "ExecuteLambda": {
      "Type": "Custom::LoadLambda",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["TGWLambdaFunction", "Arn"] },
        "Region": { "Ref": "AWS::Region" },
        "StackName": { "Ref": "TransitVPCARN"},
        "TGWID":  { "Ref": "CreateTGW" }
      }
    },

    "TGWLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
            "S3Bucket": {"Fn::Join" : ["-", [ "tgwmigration", { "Ref" : "AWS::Region" } ]]},
            "S3Key" : "tgw-migrator/latest/TGW.zip"
          },
        "FunctionName" : "vgw2tgw",
        "Handler": "vgw2tgw.lambda_handler",
        "Description": "Transit VPC: This function migrates VGW to TGW.Add more detail here",
        "Runtime": "python3.7",
        "Timeout": "300",
        "MemorySize": "128",
        "Role" : { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] }

}
},

    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {"Service": ["lambda.amazonaws.com"]},
              "Action": ["sts:AssumeRole"]
          }]
        },
        "Path": "/",
        "Policies": [{
          "PolicyName": "root",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
          		  "Effect": "Allow",
          		  "Action": [
          		    "logs:CreateLogGroup",
          		    "logs:CreateLogStream",
          		    "logs:PutLogEvents"
          		  ],
          		  "Resource": { "Fn::Join" : ["", ["arn:aws:logs:",{"Ref" : "AWS::Region"},":",{ "Ref" : "AWS::AccountId" }, ":log-group:/aws/lambda/*" ]]}
          		},
            {
              "Effect": "Allow",
              "Action": [
              "s3:ListBucket",
              "s3:GetObject",
              "s3:ListAllMyBuckets"
            ],
            "Resource": "arn:aws:s3:::*"
            },
            {
              "Effect": "Allow",
              "Action": [
              "cloudformation:Describe*",
              "s3:ListBucket",
              "s3:GetObject",
              "ec2:Describe*",
              "ec2:CreateTransitGatewayVpcAttachment",
              "ec2:DeleteTransitGatewayVpcAttachment",
              "ram:DeleteResourceShare",
              "ram:CreateResourceShare"],
              "Resource": "*"
            },
            {
            "Effect": "Allow",
            "Action": [
              "kms:Encrypt",
              "kms:Decrypt"
            ],
            "Resource": "*"
          }
          ]
          }
        }]
      }
    }
  },

  "Outputs" : {
    "TGWID" : {
      "Description": "The TGW created",
      "Value" : { "Ref": "CreateTGW" }
    }
  }
}
